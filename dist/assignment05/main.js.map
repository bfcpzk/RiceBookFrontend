{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.component.css","webpack:///./src/app/auth/auth.component.html","webpack:///./src/app/auth/auth.component.ts","webpack:///./src/app/auth/login/login.component.css","webpack:///./src/app/auth/login/login.component.html","webpack:///./src/app/auth/login/login.component.ts","webpack:///./src/app/auth/registeration/registeration.component.css","webpack:///./src/app/auth/registeration/registeration.component.html","webpack:///./src/app/auth/registeration/registeration.component.ts","webpack:///./src/app/auth/registeration/registeration.service.ts","webpack:///./src/app/main/following/following.component.css","webpack:///./src/app/main/following/following.component.html","webpack:///./src/app/main/following/following.component.ts","webpack:///./src/app/main/following/following.service.ts","webpack:///./src/app/main/headline/headline.component.css","webpack:///./src/app/main/headline/headline.component.html","webpack:///./src/app/main/headline/headline.component.ts","webpack:///./src/app/main/headline/headline.service.ts","webpack:///./src/app/main/main.component.css","webpack:///./src/app/main/main.component.html","webpack:///./src/app/main/main.component.ts","webpack:///./src/app/main/posts/comments/comments.component.css","webpack:///./src/app/main/posts/comments/comments.component.html","webpack:///./src/app/main/posts/comments/comments.component.ts","webpack:///./src/app/main/posts/posts.component.css","webpack:///./src/app/main/posts/posts.component.html","webpack:///./src/app/main/posts/posts.component.ts","webpack:///./src/app/main/posts/posts.service.ts","webpack:///./src/app/profile/profile.component.css","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/app/profile/profile.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport {RouterModule, Routes} from '@angular/router';\nimport {LoginComponent} from './auth/login/login.component';\nimport {RegisterationComponent} from './auth/registeration/registeration.component';\nimport {ProfileComponent} from './profile/profile.component';\nimport {MainComponent} from './main/main.component';\n\nconst routes: Routes = [\n  {path: '', redirectTo: '/login', pathMatch: 'full'},\n  {path: 'login', component: LoginComponent},\n  {path: 'registeration', component: RegisterationComponent},\n  {path: 'profile', component: ProfileComponent},\n  {path: 'main', component: MainComponent}\n];\n\n@NgModule({\n  imports: [\n    CommonModule,\n    RouterModule.forRoot(routes)\n  ],\n  exports:[\n    RouterModule\n  ],\n  declarations: []\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<div class=\\\"page-header\\\" style=\\\"margin-top: -20px; background-color: darkviolet\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-2\\\">\\n      <h1 style=\\\"color: aliceblue\\\">Ricebook</h1>\\n    </div>\\n  </div>\\n</div>\\n<router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {}\n","import { BrowserModule } from '@angular/platform-browser';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {NgModule} from '@angular/core';\n\nimport { AppComponent } from './app.component';\nimport { AuthComponent } from './auth/auth.component';\nimport { MainComponent } from './main/main.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { LoginComponent } from './auth/login/login.component';\nimport { RegisterationComponent } from './auth/registeration/registeration.component';\nimport { FollowingComponent } from './main/following/following.component';\nimport { HeadlineComponent } from './main/headline/headline.component';\nimport { PostsComponent } from './main/posts/posts.component';\nimport { AppRoutingModule } from './/app-routing.module';\nimport {RouterModule} from \"@angular/router\";\nimport {HttpClientModule} from \"@angular/common/http\";\nimport { CommentsComponent } from './main/posts/comments/comments.component';\nimport {ModalModule} from \"ngx-bootstrap/modal\";\nimport {CommonModule} from \"@angular/common\";\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    AuthComponent,\n    MainComponent,\n    ProfileComponent,\n    LoginComponent,\n    RegisterationComponent,\n    FollowingComponent,\n    HeadlineComponent,\n    PostsComponent,\n    CommentsComponent\n  ],\n  imports: [\n    BrowserModule,\n    FormsModule,\n    ReactiveFormsModule,\n    AppRoutingModule,\n    HttpClientModule,\n    ModalModule.forRoot(),\n    CommonModule\n  ],\n  entryComponents:[\n    CommentsComponent\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"\"","module.exports = \"<app-registeration></app-registeration>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-auth',\n  templateUrl: './auth.component.html',\n  styleUrls: ['./auth.component.css']\n})\nexport class AuthComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-4\\\">\\n    </div>\\n    <div class=\\\"col-md-5\\\">\\n      <form [formGroup]=\\\"loginForm\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n        <div class=\\\"cross-validation panel panel-success\\\" [class.cross-validation-error]=\\\"loginForm.errors && (loginForm.touched || loginForm.dirty)\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <div class=\\\"panel-title\\\">\\n              <h3>Login</h3><h5>(If your account is available)</h5>\\n            </div>\\n          </div>\\n          <div class=\\\"panel-body\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"netId\\\" class=\\\"col-sm-2 control-lable\\\">netId</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"netId\\\" id=\\\"netId\\\" formControlName=\\\"netId\\\">\\n                <div *ngIf=\\\"netId.invalid && (netId.dirty || netId.touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"netId.errors.required\\\">\\n                    Username is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <br>\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"password\\\" class=\\\"col-sm-2 control-lable\\\">password</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"password\\\" id=\\\"password\\\" formControlName=\\\"password\\\">\\n                <div *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"password.errors.required\\\">\\n                    Password is required.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <br>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"col-sm-offset-2 col-sm-10\\\">\\n                <label>Remember me!</label>\\n                <input type=\\\"checkbox\\\" style=\\\"margin-left: 15px\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"form-group\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"col-sm-2\\\">\\n                </div>\\n                <div class=\\\"col-sm-4\\\">\\n                  <button class=\\\"btn btn-success\\\" [disabled]=\\\"loginForm.invalid\\\" (click)=\\\"login(netId.value, password.value)\\\">login</button>\\n                </div>\\n                <div class=\\\"col-sm-2\\\">\\n                  <button class=\\\"btn btn-danger\\\" (click)=\\\"goToRegister()\\\">sign up</button>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-1\\\"></div>\\n              <div class=\\\"col-sm-9\\\">\\n                <div class=\\\"alert alert-danger\\\" *ngIf=\\\"(errMsg != '') && (errMsg != null)\\\">{{errMsg}}</div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n    <div class=\\\"col-md-4\\\">\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {Router} from \"@angular/router\";\nimport {HttpClient} from \"@angular/common/http\";\nimport {User} from \"../registeration/registeration.service\";\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  loginForm: FormGroup;\n\n  loginState = '';\n\n  errMsg: string;\n\n  constructor(private fb: FormBuilder,\n              private router: Router, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.loginForm = this.fb.group({\n      netId: ['', [Validators.required]],\n      password: ['', [Validators.required]]\n    });\n    this.getUser();\n  }\n\n  getUser(){\n    this.http.get('../../../assets/profile.json').subscribe(data => {\n      localStorage['users'] = JSON.stringify(data['users']);\n    })\n  }\n\n  login(netId: string, passwd: string): void{\n    const flag = this.isRegisteredUser(netId, passwd);\n    if(flag){\n      this.loginState = 'login success';\n      this.router.navigate(['main']);\n      //location.replace('main');\n    }else{\n      this.loginState = 'login failure';\n      this.errMsg = \"invalid user\";\n    }\n  }\n\n  isRegisteredUser(netId: string, passwd: string){\n    const userList = JSON.parse(localStorage['users']);\n    for(let i = 0; i < userList.length ; i++){\n      if(userList[i].netId == netId && userList[i].password == passwd){\n        localStorage['loginStatus'] = JSON.stringify(userList[i]);\n        return true;\n      }\n    }\n    return false;\n  }\n\n  goToRegister() {\n    this.router.navigate(['registeration']);\n  }\n\n  get netId() { return this.loginForm.get('netId');}\n\n  get password() { return this.loginForm.get('password');}\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\">\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      <form [formGroup]=\\\"registerForm\\\" class=\\\"form-horizontal\\\">\\n          <div class=\\\"cross-validation panel panel-success\\\" [class.cross-validation-error]=\\\"registerForm.errors && (registerForm.touched || registerForm.dirty)\\\">\\n            <div class=\\\"panel-heading\\\">\\n              <h3>Registeration</h3>\\n            </div>\\n            <div class=\\\"panel-body\\\">\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"accountName\\\" class=\\\"col-sm-3 control-lable\\\">account name</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"account name\\\" id=\\\"accountName\\\" formControlName=\\\"accountName\\\" required>\\n                  <div *ngIf=\\\"accountName.invalid && (accountName.dirty || accountName.touched)\\\"\\n                       class=\\\"alert alert-danger\\\">\\n\\n                    <div *ngIf=\\\"accountName.errors.required\\\">\\n                      Account is required.\\n                    </div>\\n                    <div *ngIf=\\\"accountName.errors.minlength\\\">\\n                      Account must be at least 4 characters long.\\n                    </div>\\n                    <div *ngIf=\\\"registerForm.hasError('accountNameChecker', 'accountName')\\\">\\n                      {{registerForm.getError('accountNameChecker', 'accountName')?.err}}\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <br>\\n              <div class=\\\"form-group\\\">\\n                <label class=\\\"col-sm-3 control-lable\\\">display name</label>\\n                <div for=\\\"displayName\\\" class=\\\"col-sm-9\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"display name\\\" id=\\\"displayName\\\" formControlName=\\\"displayName\\\">\\n                  <div *ngIf=\\\"displayName.invalid && (displayName.dirty || displayName.touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"displayName.errors.required\\\">\\n                      Display Name is required.\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <br>\\n\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"email\\\" class=\\\"col-sm-3 control-lable\\\">email</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"email\\\" class=\\\"form-control\\\" placeholder=\\\"xxx@xxx.xxx\\\" id=\\\"email\\\" formControlName=\\\"email\\\" required>\\n                  <div *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\"\\n                       class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"email.errors.required\\\">\\n                      Email is required.\\n                    </div>\\n                    <div *ngIf=\\\"email.errors.email\\\">\\n                      Email is inValid.\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <br>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"phone\\\" class=\\\"col-sm-3 control-lable\\\">phone</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"123-123-1234\\\" id=\\\"phone\\\" formControlName=\\\"phone\\\">\\n                  <div *ngIf=\\\"phone.invalid && (phone.dirty || phone.touched)\\\"\\n                       class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"phone.errors.required\\\">\\n                      Phone is required.\\n                    </div>\\n                    <div *ngIf=\\\"registerForm.hasError('phoneChecker', 'phone')\\\">\\n                      {{registerForm.getError('phoneChecker', 'phone')?.err}}\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <br>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"dat\\\" class=\\\"col-sm-3 control-lable\\\">date of birth</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"date\\\" class=\\\"form-control\\\" id=\\\"dat\\\" formControlName=\\\"dat\\\">\\n                  <div *ngIf=\\\"dat.invalid && (dat.dirty || dat.touched)\\\" class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"dat.errors.required\\\">\\n                      Birthday is required;\\n                    </div>\\n                    <div *ngIf=\\\"registerForm.hasError('ageChecker', 'dat')\\\">\\n                      {{registerForm.getError('ageChecker', 'dat')?.err}}\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n\\n              <br>\\n              <div class=\\\"form-group\\\">\\n                <label for=\\\"zipcode\\\" class=\\\"col-sm-3 control-lable\\\">zipcode</label>\\n                <div class=\\\"col-sm-9\\\">\\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"77005\\\" id=\\\"zipcode\\\" formControlName=\\\"zipcode\\\">\\n                  <div *ngIf=\\\"zipcode.invalid && (zipcode.dirty || zipcode.touched)\\\"\\n                       class=\\\"alert alert-danger\\\">\\n                    <div *ngIf=\\\"zipcode.errors.required\\\">\\n                      zipcode is required.\\n                    </div>\\n                    <div *ngIf=\\\"registerForm.hasError('zipcodeChecker', 'zipcode')\\\">\\n                      {{registerForm.getError('zipcodeChecker', 'zipcode')?.err}}\\n                    </div>\\n                  </div>\\n                </div>\\n              </div>\\n              <br>\\n\\n              <div formGroupName=\\\"password\\\">\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"pass1\\\" class=\\\"col-sm-3 control-lable\\\">password</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"password\\\" id=\\\"pass1\\\" formControlName=\\\"pass1\\\">\\n                    <div *ngIf=\\\"pass1.invalid && (pass1.dirty || pass1.touched)\\\" class=\\\"alert alert-danger\\\">\\n                      <div *ngIf=\\\"pass1.errors.minlength\\\">\\n                        Password must be at least 6 characters long.\\n                      </div>\\n                    </div>\\n                  </div>\\n                </div>\\n                <br>\\n\\n                <div class=\\\"form-group\\\">\\n                  <label for=\\\"pass2\\\" class=\\\"col-sm-3 control-lable\\\">confirmation</label>\\n                  <div class=\\\"col-sm-9\\\">\\n                    <input type=\\\"password\\\" class=\\\"form-control\\\" id=\\\"pass2\\\" formControlName=\\\"pass2\\\">\\n                    <div *ngIf=\\\"registerForm.hasError('passValidator', 'password') && (pass2.dirty || pass2.touched)\\\" class=\\\"alert alert-danger\\\">\\n                      {{registerForm.getError('passValidator', 'password')?.err}}\\n                    </div>\\n                  </div>\\n                </div>\\n                <br>\\n              </div>\\n\\n\\n              <br>\\n              <div class=\\\"form-group\\\">\\n                  <div class=\\\"col-sm-3\\\"></div>\\n                  <div class=\\\"col-sm-3\\\">\\n                    <button type=\\\"submit\\\" class=\\\"btn btn-success\\\" [disabled]=\\\"registerForm.invalid\\\" (click)=\\\"toMain()\\\">sign up</button>\\n                  </div>\\n                  <div class=\\\"col-sm-2\\\">\\n                    <button class=\\\"btn btn-danger\\\" (click)=\\\"goBackToLogin()\\\">back</button>\\n                  </div>\\n              </div>\\n            </div>\\n          </div>\\n      </form>\\n    </div>\\n\\n    <div class=\\\"col-md-3\\\">\\n    </div>\\n  </div>\\n\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from '@angular/forms';\nimport {RegisterationService, User} from './registeration.service';\nimport {Router} from \"@angular/router\";\n\n@Component({\n  selector: 'app-registeration',\n  templateUrl: './registeration.component.html',\n  styleUrls: ['./registeration.component.css']\n})\nexport class RegisterationComponent implements OnInit {\n\n  registerForm: FormGroup;\n\n  constructor(private fb : FormBuilder,\n              private registerationService: RegisterationService,\n              private router: Router) {}\n\n  ngOnInit() {\n    this.registerForm = this.fb.group({\n      accountName: ['', [Validators.required, Validators.minLength(4), this.registerationService.checkAccount]],\n      displayName: ['', [Validators.required]],\n      email: ['', [Validators.required, Validators.email]],\n      phone: ['', [Validators.required, this.registerationService.checkPhone]],\n      dat: ['2000-04-23', [this.registerationService.checkAge]],\n      zipcode: ['77005', [Validators.required, this.registerationService.checkZipcode]],\n      password: this.fb.group({\n        pass1: ['',[Validators.minLength(6)]],\n        pass2: ['']\n      }, {validator: this.registerationService.checkPassword})\n    });\n  }\n\n  goBackToLogin(): void{\n    this.router.navigate(['login']);\n  }\n\n  get accountName() { return this.registerForm.get('accountName'); }\n\n  get displayName() { return this.registerForm.get('displayName');}\n\n  get email() { return this.registerForm.get('email'); }\n\n  get phone() { return this.registerForm.get('phone'); }\n\n  get dat() { return this.registerForm.get('dat'); }\n\n  get zipcode() { return this.registerForm.get('zipcode'); }\n\n  get pass1() {return this.registerForm.get('password').get('pass1');}\n\n  get pass2() {return this.registerForm.get('password').get('pass2');}\n\n  toMain(){\n    const user = JSON.parse(localStorage['users'])[0];\n    localStorage['loginStatus'] = JSON.stringify(user);\n    this.router.navigate(['main']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {FormControl, FormGroup} from '@angular/forms';\n\n\nexport class User{\n  netId: string;\n  account_name: string;\n  display_name: string;\n  email: string;\n  phone: string;\n  date_of_birth: string;\n  zipcode: string;\n  password: string;\n  headline: string;\n  profile: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class RegisterationService {\n\n  constructor() { }\n\n  checkAge(control: FormControl): any{\n    const date = new Date();\n    const birth = control.value;\n    const birthdayTs = new Date(birth);\n    const diff = date.getTime() - birthdayTs.getTime();\n    const age = Math.floor(diff / 1000 / 60 / 60 / 24 / 365);\n    return (age >= 18) ? null : {ageChecker: {err: 'Your age is under 18'}};\n  }\n\n  checkAccount(control: FormControl): any{\n    const account = control.value;\n    if(account[0] >= '0' && account[0] <= '9') {\n      return {accountNameChecker: {err: 'The first character cannot be number'}};\n    }\n    for(let i = 1 ; i < account.length ; i++){\n      let letter = account[i];\n      if(!((letter >= 'a' && letter <= 'z') || (letter >= 'A' && letter <= 'Z') || (letter >= '0' && letter <= '9'))) {\n        return {accountNameChecker: {err: 'Illgal characters exist'}}\n      }\n    }\n    return null;\n  }\n\n  checkPhone(control: FormControl): any{\n    const phone = control.value;\n    if(phone == '') return null;\n    const pat = /^\\d{3}-\\d{3}-\\d{4}$/;\n    const res = pat.test(phone);\n    return res ? null : {phoneChecker: {err : 'Phone number is invalid.'}}\n  }\n\n  checkZipcode(control: FormControl): any{\n    const zipcode = control.value;\n    if(zipcode == '') return null;\n    const pat = /^\\d{5}$/;\n    const res = pat.test(zipcode);\n    return res ? null : {zipcodeChecker: {err : 'Zipcode is invalid.'}}\n  }\n\n  checkPassword(controlGroup: FormGroup): any{\n    const pass1 = controlGroup.get('pass1').value as FormControl;\n    const pass2 = controlGroup.get('pass2').value as FormControl;\n    const isEqual = (pass1 == pass2);\n    return isEqual ? null : {passValidator: {err: 'The password is not consistent'}}\n  }\n\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-success\\\">\\n  <div class=\\\"panel-heading\\\">\\n    <div class=\\\"panel-title\\\">\\n      <strong>Followers</strong>\\n    </div>\\n  </div>\\n  <div class=\\\"panel-body\\\" style=\\\"height:442px; overflow-y:auto\\\" >\\n    <div class=\\\"row\\\" style=\\\"margin-top: 2px; margin-left: -2px; margin-right: -2px\\\" *ngFor=\\\"let follower of followers\\\">\\n      <div class=\\\"panel panel-success panel-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-5\\\">\\n            <img src=\\\"{{follower.avatar}}\\\" width=\\\"80px\\\" height=\\\"80px\\\" alt=\\\"friend profile\\\">\\n          </div>\\n          <div class=\\\"col-sm-7\\\">\\n            <div class=\\\"row\\\" style=\\\"margin-top: 10px\\\">\\n              <div class=\\\"col-sm-5\\\">\\n                <div class=\\\"badge\\\" style=\\\"margin-left: -8px\\\">{{follower.name}}</div>\\n              </div>\\n              <div class=\\\"col-sm-6\\\">\\n                <button class=\\\"btn btn-xs btn-warning\\\" style=\\\"margin-left: -5px\\\" (click)=\\\"unfollow(follower.netId)\\\">unfollow</button>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\" style=\\\"margin-top: 15px\\\">\\n              <span class=\\\"label label-info\\\">{{follower.status}}</span>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"panel-footer\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"form-control\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"addNetId\\\" placeholder=\\\"netId(zp7,jw101,bb34)\\\">\\n      </div>\\n      <div class=\\\"col-sm-3\\\">\\n        <span style=\\\"margin-left: 20px\\\">\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"addFollower()\\\">Add</button>\\n        </span>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\" *ngIf=\\\"errMsg\\\" style=\\\"text-align: center\\\">\\n      <span style=\\\"color: red;\\\">{{errMsg}}</span>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, EventEmitter, OnInit, Output} from '@angular/core';\nimport {Follower, FollowingService} from \"./following.service\";\nimport {User} from \"../../auth/registeration/registeration.service\";\n\n@Component({\n  selector: 'app-following',\n  templateUrl: './following.component.html',\n  styleUrls: ['./following.component.css']\n})\nexport class FollowingComponent implements OnInit {\n\n  addNetId: string;\n\n  user: User;\n\n  followers: Follower[];\n\n  errMsg: string;\n\n  @Output() sendNetId = new EventEmitter<string>();\n\n  constructor(private followeringService: FollowingService) {}\n\n  ngOnInit() {\n    this.followeringService.initFollowerList().subscribe(data => {\n      this.followers = data['followers'];\n      localStorage['followers'] = JSON.stringify(this.followers);\n    });\n    if(localStorage['loginStatus'] != null){\n      this.user = JSON.parse(localStorage['loginStatus'])\n    }else{\n      this.user = new User();\n    }\n  }\n\n  addFollower(){\n    const res = this.followeringService.addFollower(this.addNetId, this.followers, this.user.netId);\n    if(res != null) {\n      this.followers.push(res);\n      this.sendNetId.emit(JSON.stringify({'netId':res.netId, 'flag': 1}));\n    } else {\n      this.errMsg = \"invalid adding\";\n      setTimeout(() => {\n        this.errMsg = '';\n      }, 2000)\n    }\n    this.addNetId = '';\n  }\n\n  unfollow(netId: string){\n    let i = 0;\n    for(; i < this.followers.length ; i++){\n      if(this.followers[i].netId == netId){\n        break;\n      }\n    }\n    this.followers.splice(i, 1);\n    this.sendNetId.emit(JSON.stringify({'netId': netId, 'flag': 0}));\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\nimport {Observable} from \"rxjs/index\";\n\n\nexport class Follower{\n  netId: string;\n  name: string;\n  avatar: string;\n  status: string;\n}\n\n@Injectable({\n  providedIn: 'root',\n})\nexport class FollowingService {\n\n\n  constructor(private http: HttpClient) { }\n\n  initFollowerList(): Observable<any>{\n    return this.http.get('../../../assets/followers.json');\n  }\n\n  addFollower(addNetId: string, followers: Follower[], curNetId: string): any{\n    if(!this.checkHasAdded(addNetId, followers)){\n      const users = JSON.parse(localStorage['users'])\n      let hasAddingUser = false;\n      let i = 0;\n      for(; i < users.length ; i++){\n        if(users[i].netId == addNetId && curNetId != addNetId){\n          hasAddingUser = true;\n          break;\n        }\n      }\n      if(hasAddingUser){\n        let f = new Follower();\n        f.netId = users[i].netId;\n        f.name = addNetId;\n        f.avatar = users[i].profile;\n        f.status = users[i].headline;\n        return f;\n      }else{\n        return null;\n      }\n    }else return null;\n  }\n\n  checkHasAdded(netId: string, followers: Follower[]){\n    for(let i = 0 ; i < followers.length ; i++){\n      if(followers[i].netId == netId) {\n        return true;\n      }\n    }\n    return false;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"panel panel-info\\\">\\n  <div class=\\\"panel panel-heading\\\">\\n    <div class=\\\"panel-title\\\">\\n      <strong>Basic Profile</strong>\\n    </div>\\n  </div>\\n  <div class=\\\"panel-body\\\">\\n    <div class=\\\"row\\\" style=\\\"margin-top: -10px\\\">\\n      <div class=\\\"col-sm-5\\\">\\n        <img src=\\\"{{user.profile}}\\\" alt=\\\"my profile\\\" class=\\\"img-circle\\\" width=\\\"75px\\\" height=\\\"90px\\\">\\n      </div>\\n      <div class=\\\"col-sm-7\\\">\\n        <div class=\\\"row\\\" style=\\\"margin-top: 10px\\\">\\n          <div class=\\\"badge\\\">\\n            <span class=\\\"glyphicon glyphicon-user\\\"></span>{{user.display_name}}\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\" style=\\\"margin-top: 15px\\\">\\n          <span class=\\\"label label-info\\\">{{user.headline}}</span>\\n        </div>\\n      </div>\\n    </div>\\n    <br>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-7\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"new status\\\" [(ngModel)]=\\\"newStatus\\\">\\n      </div>\\n      <div class=\\\"col-sm-5\\\">\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"updateHeadline()\\\">Update</button>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"panel-footer\\\">\\n    <button id=\\\"logout\\\" class=\\\"btn btn-danger\\\" (click)=\\\"logout()\\\" style=\\\"margin-right: 80px\\\">Log Out</button>\\n    <button id=\\\"profile\\\" class=\\\"btn btn-warning\\\" (click)=\\\"toProfile()\\\">Profile</button>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {HeadlineService} from \"./headline.service\";\nimport {User} from \"../../auth/registeration/registeration.service\";\n\n@Component({\n  selector: 'app-headline',\n  templateUrl: './headline.component.html',\n  styleUrls: ['./headline.component.css']\n})\nexport class HeadlineComponent implements OnInit {\n\n  constructor(private router: Router,\n              private headlineService: HeadlineService) { }\n\n  newStatus : string;\n\n  user: User;\n\n  ngOnInit() {\n    if(localStorage['loginStatus'] != null){\n      this.user = JSON.parse(localStorage['loginStatus']);\n    }else{\n      this.user = new User();\n    }\n  }\n\n  updateHeadline(){\n    this.user.headline = this.headlineService.updateHeadline(this.newStatus, this.user.headline);\n    this.newStatus = '';\n  }\n\n  logout(){\n    localStorage.removeItem('loginStatus');\n    this.router.navigate(['login']);\n    //location.replace('login');\n  }\n\n  toProfile(){\n    this.router.navigate(['profile']);\n  }\n}\n","import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class HeadlineService {\n\n  constructor() { }\n\n  updateHeadline(newStatus: string, headline: string) {\n    if(newStatus != ''){\n      let preLoginJson = JSON.parse(localStorage['loginStatus']);\n      preLoginJson['headline'] = newStatus;\n      localStorage['loginStatus'] = JSON.stringify(preLoginJson);\n      if(newStatus.length > 16){\n        return newStatus.substr(0, 16) + \"..\";\n      }else{\n        return newStatus;\n      }\n    }else return headline;\n  }\n}\n","module.exports = \"\"","module.exports = \"<script src=\\\"following/following.component.ts\\\"></script>\\n<div class=\\\"container\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\">\\n      <div class=\\\"row\\\">\\n        <app-headline></app-headline>\\n      </div>\\n      <div class=\\\"row\\\">\\n        <app-following (sendNetId)=\\\"getNewNetId($event)\\\"></app-following>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-9\\\">\\n      <app-posts [getNetIdFromParent]=\\\"getNetIdFromFollowing\\\"></app-posts>\\n    </div>\\n  </div>\\n</div>\\n\\n\\n\\n\\n\\n\\n<!--\\n\\n<div class=\\\"col-md-6\\\">\\n  <div class=\\\"panel panel-success panel-body\\\" *ngIf=\\\"feed[0] != null\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-7\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-5\\\">\\n            <div class=\\\"badge\\\">\\n              <span class=\\\"glyphicon glyphicon-user\\\"></span>{{feed[0].author}}\\n            </div>\\n          </div>\\n          <div class=\\\"col-sm-5\\\">\\n            <span class=\\\"label label-info\\\">{{feed[0].create_time}}</span>\\n          </div>\\n        </div>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"panel panel-default panel-body\\\" style=\\\"margin-top: 9px; margin-left: 3px; margin-bottom: -7px\\\">\\n            {{feed[0].content}}\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"col-sm-5\\\">\\n        <div class=\\\"row\\\" style=\\\"text-align: center\\\">\\n          <img src=\\\"{{feed[0].pic}}\\\" class=\\\"img-rounded\\\" alt=\\\"feed pic\\\" width=\\\"120px\\\" height=\\\"96px\\\">\\n        </div>\\n        <div class=\\\"row\\\" style=\\\"text-align: center; margin-top: 5px\\\">\\n          <button class=\\\"btn btn-success\\\" style=\\\"margin-right: 5px\\\">Edit</button>\\n          <button class=\\\"btn btn-info\\\">Comment</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n-->\\n\"","import { Component, OnInit } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\n@Component({\n  selector: 'app-main',\n  templateUrl: './main.component.html',\n  styleUrls: ['./main.component.css']\n})\nexport class MainComponent implements OnInit {\n\n  getNetIdFromFollowing: string;\n\n  constructor(private http: HttpClient) {}\n\n  ngOnInit() {\n  }\n\n  getNewNetId(event){\n    this.getNetIdFromFollowing = event;\n    //alert('haha');\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"modal-header\\\">\\n  <h4 class=\\\"modal-title pull-left\\\">{{title}}</h4>\\n  <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n    <span aria-hidden=\\\"true\\\">&times;</span>\\n  </button>\\n</div>\\n<div class=\\\"modal-body\\\">\\n  <ul class=\\\"list-group\\\" *ngIf=\\\"feed\\\">\\n    <li class=\\\"list-group-item\\\" *ngFor=\\\"let comment of feed.comments\\\">{{comment.content}}</li>\\n  </ul>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {BsModalRef} from \"ngx-bootstrap\";\n\n\n@Component({\n  selector: 'app-comments',\n  templateUrl: './comments.component.html',\n  styleUrls: ['./comments.component.css']\n})\nexport class CommentsComponent implements OnInit {\n\n  title;\n  feed;\n  constructor(public modalRef: BsModalRef) { }\n\n  ngOnInit() {\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-md-8\\\">\\n    <div class=\\\"panel panel-success\\\">\\n      <div class=\\\"panel-heading\\\">\\n        <div class=\\\"panel-title\\\">\\n          <strong>Feed Post</strong>\\n        </div>\\n      </div>\\n      <div class=\\\"panel-body\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6\\\">\\n            <div class=\\\"panel panel-danger panel-body\\\">\\n              <img src=\\\"{{imgUrl}}\\\" class=\\\"img-rounded\\\" alt=\\\"upload pic\\\" width=\\\"120px\\\" height=\\\"96px\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-6\\\">\\n            <textarea class=\\\"form-control\\\" rows=\\\"6\\\" [(ngModel)]=\\\"textContent\\\" placeholder=\\\"write sth down\\\"></textarea>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"panel-footer\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-sm-4\\\" style=\\\"text-align: center\\\">\\n            <label for=\\\"file\\\" class=\\\"btn btn-default\\\">add image</label>\\n            <input id=\\\"file\\\" type=\\\"file\\\" style=\\\"display:none\\\">\\n          </div>\\n          <div class=\\\"col-sm-4\\\" style=\\\"text-align: center\\\">\\n            <button class=\\\"btn btn-danger\\\" (click)=\\\"reset()\\\">cancel</button>\\n          </div>\\n          <div class=\\\"col-sm-4\\\" style=\\\"text-align: center\\\">\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"postFeed()\\\">post</button>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n  <div class=\\\"col-md-4\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"panel panel-success panel-body\\\" style=\\\"height: 150px; margin-top: 43px;\\\">\\n        <div class=\\\"row\\\" style=\\\"text-align: center\\\">\\n          <img src=\\\"{{album}}\\\" alt=\\\"Rice gallery\\\" class=\\\"img-rounded\\\" width=\\\"140px\\\" height=\\\"120px\\\">\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-8\\\">\\n        <input type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"searchCondition\\\" placeholder=\\\"search area\\\">\\n      </div>\\n      <div class=\\\"col-sm-4\\\">\\n        <button class=\\\"btn btn-success\\\" (click)=\\\"searchPost()\\\">search</button>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"panel panel-success\\\" style=\\\"margin-left: 15px; margin-top: 6px\\\">\\n    <div class=\\\"panel-heading\\\">\\n      <div class=\\\"panel-title\\\">\\n        <strong>Feed Area</strong>\\n      </div>\\n    </div>\\n    <div class=\\\"panel-body\\\" style=\\\"height:500px; overflow-y:auto\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\" *ngFor=\\\"let feed of searchRes; index as i\\\">\\n          <div class=\\\"panel panel-success panel-body\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-sm-5\\\">\\n                <div class=\\\"badge\\\">\\n                  <span class=\\\"glyphicon glyphicon-user\\\"></span>{{feed.author}}\\n                </div>\\n              </div>\\n              <div class=\\\"col-sm-7\\\">\\n                <span class=\\\"label label-info\\\" style=\\\"margin-right: 10px\\\">{{feed.create_time}}</span>\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\" style=\\\"text-align: center; margin-top: 5px\\\">\\n              <img src=\\\"{{feed.pic}}\\\" class=\\\"img-rounded\\\" alt=\\\"feed pic\\\" width=\\\"120px\\\" height=\\\"96px\\\">\\n            </div>\\n            <div class=\\\"row\\\" style=\\\"margin-top: 5px\\\">\\n              <div class=\\\"panel panel-default panel-body\\\" style=\\\"height: 100px; overflow-y: auto\\\">\\n                {{feed.content}}\\n              </div>\\n            </div>\\n            <div class=\\\"row\\\" style=\\\"text-align: center; margin-top: 5px\\\">\\n              <button class=\\\"btn btn-success\\\" style=\\\"margin-right: 20px\\\">Edit</button>\\n              <button class=\\\"btn btn-info\\\" (click)=\\\"showComments(i)\\\">Comment</button>\\n            </div>\\n          </div>\\n\\n\\n          <!--(click)=\\\"showComments(template)\\\"-->\\n          <!--<ng-template #template>\\n            <div class=\\\"modal-header\\\">\\n              <h4 class=\\\"modal-title pull-left\\\">Modal</h4>\\n              <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n                <span aria-hidden=\\\"true\\\">&times;</span>\\n              </button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n              This is a modal.\\n            </div>\\n          </ng-template>-->\\n\\n\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n\"","import {Component, Input, OnInit, TemplateRef} from '@angular/core';\nimport {Feed, PostsService} from \"./posts.service\";\nimport {BsModalRef, BsModalService} from \"ngx-bootstrap\";\nimport {CommentsComponent} from \"./comments/comments.component\";\nimport {HttpClient} from \"@angular/common/http\";\n\nconst album_data = [\"https://www.rice.edu/_images/feature-rice-facts.jpg\",\n  \"https://www.rice.edu/_images/feature-why-rice.jpg\",\n  \"https://www.rice.edu/_images/uploads/2015/baker-college-746x496.jpg\",\n  \"https://www.rice.edu/_images/uploads/2015/martel-around-at-night-746x496.jpg\"];\n\n@Component({\n  selector: 'app-posts',\n  templateUrl: './posts.component.html',\n  styleUrls: ['./posts.component.css']\n})\nexport class PostsComponent implements OnInit {\n\n  textContent = '';\n\n  imgUrl: string;\n\n  feedList: Feed[];\n\n  searchCondition = '';\n\n  searchRes: Feed[];\n\n  netId: string;\n\n  album = \"https://www.rice.edu/_images/uploads/2015/martel-around-at-night-746x496.jpg\";\n\n  index = 0;\n\n  @Input()\n  set getNetIdFromParent(getNetIdFromParent: string){\n    //alert(getNetIdFromParent);\n    if(getNetIdFromParent != null && getNetIdFromParent != ''){\n      const obj = JSON.parse(getNetIdFromParent);\n      if(obj.flag == 1){\n        this.searchRes = this.postsService.addNewFollowersPosts(obj.netId, this.feedList);\n      }else{\n        this.feedList = this.postsService.removeFollowersPosts(obj.netId, this.feedList);\n        this.searchRes = this.feedList;\n      }\n    }\n  }\n\n  /*modalRef: BsModalRef;*/\n\n  constructor(private postsService: PostsService,\n              private modalService: BsModalService,\n              private http: HttpClient) {\n  }\n\n  ngOnInit() {\n\n    this.http.get('../../assets/articles.json').subscribe(data => {\n      localStorage['articles'] = JSON.stringify(data['articles']);\n      let user = JSON.parse(localStorage['loginStatus']);\n      this.netId = user.netId;\n      this.feedList = this.getFeedList(this.netId);\n      this.searchRes = this.feedList;\n    });\n\n    this.imgUrl = 'assets/white.jpg';\n    this.searchRes = [];\n\n    setInterval(() => {\n      this.index = (this.index + 1) % album_data.length;\n      this.album = album_data[this.index];\n    }, 2500);\n  }\n\n  getFeedList(netId: string){\n    return this.postsService.getFeedList(netId);\n  }\n\n  reset(){\n    this.textContent = '';\n  }\n\n  postFeed(){\n    if(this.textContent !== ''){\n      this.postsService.postFeed(this.feedList, this.imgUrl, this.textContent);\n      this.textContent = '';\n    }\n  }\n\n  searchPost(){\n    if(this.searchCondition != ''){\n      this.searchRes = this.postsService.searchPost(this.feedList, this.searchCondition);\n      this.searchCondition = '';\n    }else{\n      this.searchRes = this.feedList;\n    }\n  }\n\n  modalRef: BsModalRef;\n  showComments(index: number){\n    this.modalRef = this.modalService.show(CommentsComponent, {\n      initialState:{\n        title: 'Comment List',\n        feed: this.feedList[index]\n      }\n    });\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nexport class Feed{\n  id: number;\n  netId: string;\n  author: string;\n  create_time: string;\n  content: string;\n  pic: string;\n  comments: Comment[];\n}\n\nexport class Comment{\n  cid: number;\n  content: string;\n  create_time: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PostsService {\n\n  constructor() { }\n\n  sortFeedListByTime(feedList: Feed[]){\n    feedList.sort((a: Feed, b: Feed) => {\n      if(a.create_time > b.create_time) return -1;\n      else if(a.create_time < b.create_time) return 1;\n      else return 0;\n    });\n  }\n\n  searchPost(feedList: Feed[], searchCondition: string) {\n    this.sortFeedListByTime(feedList);\n    let tmpArr = [];\n    for(let i = 0 ; i < feedList.length ; i++){\n      if(feedList[i].content.includes(searchCondition)\n        || feedList[i].author.toLowerCase() == searchCondition.toLowerCase()){\n        tmpArr.push(feedList[i]);\n      }\n    }\n    return tmpArr;\n  }\n\n  getFeedList(netId: string){\n    const articles = JSON.parse(localStorage['articles']);\n    let arr = [];\n    for(let i = 0 ; i < articles.length ; i++){\n      if(articles[i].netId == netId)\n        arr.push(articles[i]);\n    }\n    this.sortFeedListByTime(arr);\n    return arr;\n  }\n\n  postFeed(feedList: Feed[], imgUrl: string, textContent: string){\n    let f = new Feed();\n    const date = new Date();\n    f.pic = imgUrl;\n    f.content = textContent;\n    f.id = 11;\n    const month = (date.getMonth() < 9) ? (\"0\" + (date.getMonth() + 1)) : (\"\" + (date.getMonth() + 1));\n    const day = (date.getDate() < 10) ? (\"0\" + (date.getDate() + 1)) : (\"\" + (date.getDate() + 1))\n    f.create_time = date.getFullYear() + \"-\" + month + \"-\" + day;\n    f.author = JSON.parse(localStorage['loginStatus']).display_name;\n    feedList.unshift(f);\n  }\n\n  copyFeedList(tmpFeedList: Feed[]){\n    let feedList = [];\n    for(let i = 0 ; i < tmpFeedList.length ; i++){\n      feedList.push(tmpFeedList[i]);\n    }\n    return feedList;\n  }\n\n  addNewFollowersPosts(newNetId: string, tmpFeedList: Feed[]){\n    const articles = JSON.parse(localStorage['articles']);\n    for(let i = 0; i < articles.length ; i++){\n      if(articles[i].netId == newNetId) tmpFeedList.push(articles[i]);\n    }\n    this.sortFeedListByTime(tmpFeedList);\n    return this.copyFeedList(tmpFeedList);\n  }\n\n  removeFollowersPosts(newNetId: string, tmpFeedList: Feed[]){\n    let tmpArr = []\n    for(let i = 0 ; i < tmpFeedList.length ; i++){\n      if(tmpFeedList[i].netId != newNetId) {\n        tmpArr.push(tmpFeedList[i]);\n      }\n    }\n    this.sortFeedListByTime(tmpArr);\n    return tmpArr;\n  }\n\n  getValue(): number{\n    return 10;\n  }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"container\\\" xmlns=\\\"http://www.w3.org/1999/html\\\" xmlns=\\\"http://www.w3.org/1999/html\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"panel panel-success\\\">\\n        <div class=\\\"panel-body row\\\">\\n          <div class=\\\"col-md-2 panel panel-success panel-heading\\\">\\n            <strong>Basic Profile</strong>\\n          </div>\\n          <div class=\\\"col-md-3\\\">\\n            <img src=\\\"{{user.profile}}\\\" class=\\\"img-circle\\\" width=\\\"75px\\\" height=\\\"90px\\\" alt=\\\"user head shot\\\">\\n          </div>\\n          <div class=\\\"col-md-7\\\">\\n            <div id=\\\"description\\\">\\n              <p>1. First-year master of computer science student from Rice.</p>\\n              <p>2. Programming is the most favorite thing that I have ever met.</p>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"panel panel-danger\\\">\\n        <div class=\\\"panel-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-3\\\">\\n              <img src=\\\"../../assets/owl.jpg\\\" class=\\\"img-rounded\\\" width=\\\"120px\\\" height=\\\"95px\\\"  alt=\\\"logo\\\">\\n            </div>\\n            <div class=\\\"col-md-5\\\" style=\\\"text-align: center\\\">\\n              <div class=\\\"row\\\">\\n                <h4>Ricebook</h4>\\n              </div>\\n              <div class=\\\"row\\\">\\n                <strong>Write your story in Rice!</strong>\\n              </div>\\n            </div>\\n            <div class=\\\"col-md-4\\\">\\n              <img src=\\\"../../assets/lovett.jpg\\\" class=\\\"img-rounded\\\" width=\\\"140px\\\" height=\\\"95px\\\" alt=\\\"Lovett Hall\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-3\\\" style=\\\"text-align: center\\\">\\n      <label for=\\\"file\\\" class=\\\"btn btn-success\\\">update image</label>\\n      <input id=\\\"file\\\" type=\\\"file\\\" style=\\\"display:none; \\\">\\n    </div>\\n    <div class=\\\"col-md-3\\\" style=\\\"text-align: center\\\">\\n      <button class=\\\"btn btn-info\\\" (click)=\\\"toMain()\\\">main</button>\\n    </div>\\n  </div>\\n\\n\\n  <div class=\\\"row\\\" style=\\\"margin-top: 5px;\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div id=\\\"current_info_board\\\" class=\\\"panel panel-info\\\">\\n        <div class=\\\"panel-heading\\\">\\n          <div class=\\\"panel-title\\\">\\n            <h3>Current Info</h3>\\n          </div>\\n        </div>\\n        <div class=\\\"panel-body\\\" *ngIf=\\\"user\\\">\\n          <div class=\\\"alert alert-warning\\\">\\n            <span><strong>Name:</strong>&nbsp;&nbsp;&nbsp;&nbsp;</span>\\n            <span>{{user.display_name}}</span>\\n          </div>\\n          <div class=\\\"alert alert-warning\\\">\\n            <span><strong>Email:</strong>&nbsp;&nbsp;&nbsp;&nbsp;</span>\\n            <span>{{user.email}}</span>\\n          </div>\\n          <div class=\\\"alert alert-warning\\\">\\n            <span><strong>Phone:</strong>&nbsp;&nbsp;&nbsp;&nbsp;</span>\\n            <span>{{user.phone}}</span>\\n          </div>\\n          <div class=\\\"alert alert-warning\\\">\\n            <span><strong>Zipcode:</strong>&nbsp;&nbsp;&nbsp;&nbsp;</span>\\n            <span>{{user.zipcode}}</span>\\n          </div>\\n          <div class=\\\"alert alert-danger\\\">\\n            <span><strong>Date of Birth:</strong>&nbsp;&nbsp;&nbsp;&nbsp;</span>\\n            <span>{{user.date_of_birth}}</span>\\n          </div>\\n        </div>\\n\\n      </div>\\n    </div>\\n\\n    <div class=\\\"col-md-6\\\">\\n      <form [formGroup]=\\\"updateForm\\\" class=\\\"form-horizontal\\\" role=\\\"form\\\">\\n        <div class=\\\"cross-validation panel panel-success\\\" [class.cross-validation-error]=\\\"updateForm.errors && (updateForm.touched || updateForm.dirty)\\\">\\n          <div class=\\\"panel-heading\\\">\\n            <div class=\\\"panel-title\\\">\\n              <h3>Update Info</h3>\\n            </div>\\n          </div>\\n          <div class=\\\"panel-body\\\">\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"name\\\" class=\\\"col-sm-2 control-lable\\\">Name</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"name\\\" formControlName=\\\"name\\\">\\n              </div>\\n            </div>\\n            <br>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"email\\\" class=\\\"col-sm-2 control-lable\\\">Email</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"xx@xx.xx\\\" id=\\\"email\\\" formControlName=\\\"email\\\">\\n                <div *ngIf=\\\"updateEmail.invalid && (updateEmail.dirty || updateEmail.touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"updateEmail.errors.email\\\">\\n                    Email is invalid.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <br>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"phone\\\" class=\\\"col-sm-2 control-lable\\\">Phone</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"123-123-1234\\\" id=\\\"phone\\\" formControlName=\\\"phone\\\">\\n                <div *ngIf=\\\"updatePhone.invalid && (updatePhone.dirty || updatePhone.touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"updatePhone.errors.phoneChecker\\\">\\n                    {{updatePhone.errors.phoneChecker.err}}\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <br>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"zipcode\\\" class=\\\"col-sm-2 control-lable\\\">Zipcode</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"77005\\\" id=\\\"zipcode\\\" formControlName=\\\"zipcode\\\">\\n                <div *ngIf=\\\"updateZipcode.invalid && (updateZipcode.dirty || updateZipcode.touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"updateZipcode.errors.zipcodeChecker\\\">\\n                    Zipcode is invalid.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <br>\\n\\n            <div class=\\\"form-group\\\">\\n              <label for=\\\"password\\\" class=\\\"col-sm-2 control-lable\\\">Password</label>\\n              <div class=\\\"col-sm-10 \\\">\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"***\\\" id=\\\"password\\\" formControlName=\\\"password\\\">\\n                <div *ngIf=\\\"updatePassword.invalid && (updatePassword.dirty || updatePassword.touched)\\\" class=\\\"alert alert-danger\\\">\\n                  <div *ngIf=\\\"updatePassword.errors.minlength\\\">\\n                    Password should be at least 6 characters.\\n                  </div>\\n                </div>\\n              </div>\\n            </div>\\n            <br>\\n            <div class=\\\"form-group\\\">\\n                <div class=\\\"col-sm-2\\\"></div>\\n                <div class=\\\"col-sm-8\\\">\\n                  <button class=\\\"btn btn-info\\\" [disabled]=\\\"updateForm.invalid\\\" (click)=\\\"onUpdate()\\\">Update Info</button>\\n                </div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n\\n\\n    </div>\\n  </div>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport {FormBuilder, FormGroup, Validators} from \"@angular/forms\";\nimport {ProfileService} from \"./profile.service\";\nimport {Router} from \"@angular/router\";\nimport {User} from \"../auth/registeration/registeration.service\";\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n\n  updateForm: FormGroup;\n\n  user: User;\n\n  constructor(private fb: FormBuilder,\n              private profileService: ProfileService,\n              private router: Router) {}\n\n  fetchUser(): void{\n    if(localStorage['loginStatus'] != null){\n      this.user = JSON.parse(localStorage['loginStatus']);\n    }else{\n      this.user = new User();\n    }\n  }\n\n  initForm(): void{\n    this.updateForm = this.fb.group({\n      name: ['', []],\n      email: ['', [Validators.email]],\n      phone: ['', [this.profileService.checkPhone]],\n      zipcode: ['', [this.profileService.checkZipcode]],\n      password: ['', [Validators.minLength(6)]]\n    });\n  }\n\n  ngOnInit() {\n    this.initForm();\n    this.fetchUser();\n  }\n\n  get updateName() { return this.updateForm.get('name'); }\n\n  get updateEmail() { return this.updateForm.get('email'); }\n\n  get updatePhone() { return this.updateForm.get('phone'); }\n\n  get updateZipcode() { return this.updateForm.get('zipcode');}\n\n  get updatePassword() { return this.updateForm.get('password');}\n\n  onUpdate(): void{\n    this.profileService.onUpdate(this.updateForm, this.user);\n    localStorage['loginStatus'] = JSON.stringify(this.user);\n    this.initForm();\n  }\n\n  toMain(){\n    this.router.navigate(['main']);\n  }\n}\n","import { Injectable } from '@angular/core';\nimport {FormControl, FormGroup} from \"@angular/forms\";\nimport {User} from \"../auth/registeration/registeration.service\";\nimport {HttpClient} from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ProfileService {\n\n  constructor(private http: HttpClient) { }\n\n  getUser(){\n    return this.http.get('../../assets/profile.json');\n  }\n\n  onUpdate(updateForm: FormGroup, user: User): void{\n    const formRawValue = updateForm.getRawValue();\n    if(formRawValue.name != '') {\n      user.display_name = formRawValue.name;\n    }\n    if(formRawValue.email != '') {\n      user.email = formRawValue.email;\n    }\n    if(formRawValue.phone != '') {\n      user.phone = formRawValue.phone;\n    }\n    if(formRawValue.zipcode != '') {\n      user.zipcode = formRawValue.zipcode;\n    }\n    updateForm.reset('');\n  }\n\n  checkPhone(control: FormControl): any{\n    const phone = control.value;\n    if(phone == '') return null;\n    const pat = /^\\d{3}-\\d{3}-\\d{4}$/;\n    const res = pat.test(phone);\n    return res ? null : {phoneChecker: {err : 'Phone number is invalid.'}}\n  }\n\n  checkZipcode(control: FormControl): any{\n    const zipcode = control.value;\n    if(zipcode == '') return null;\n    const pat = /^\\d{5}$/;\n    const res = pat.test(zipcode);\n    return res ? null : {zipcodeChecker: {err : 'Zipcode is invalid.'}}\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}